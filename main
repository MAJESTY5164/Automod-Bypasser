// ==UserScript==
// @name         Custom Discord Enhancements
// @namespace    http://tampermonkey.net/
// @version      2025-04-26
// @description  Adds custom glow effects and a custom bypass button to Discord UI
// @author       You
// @match        *://*.discord.com/channels/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=tampermonkey.net
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    // ==============================
    // Glow Effect for Avatars and Usernames
    // ==============================
    const targetUserIds = [
        "876503258192027708",
        "549104375927406614"
    ];

    function applyGlowToAvatar(avatar) {
        avatar.style.boxShadow = '0 0 10px rgb(255, 0, 182), 0 0 15px rgb(120, 0, 189), 0 0 20px rgb(120, 0, 189)';
        avatar.style.borderRadius = '50%';
        avatar.setAttribute('data-is-special', 'true');
    }

    function changeAvatarGlow() {
        const allAvatars = document.querySelectorAll('img.avatar__44b0c, img.avatar_c19a55');
        allAvatars.forEach(avatar => {
            targetUserIds.forEach(targetUserId => {
                if (avatar.src.includes(targetUserId)) {
                    applyGlowToAvatar(avatar);
                }
            });
        });

        // Glow the top-left avatar (user panel avatar)
        const userPanelAvatar = document.querySelector('.avatarWrapper__37e49 img.avatar__44b0c');
        if (userPanelAvatar) {
            targetUserIds.forEach(targetUserId => {
                if (userPanelAvatar.src.includes(targetUserId)) {
                    applyGlowToAvatar(userPanelAvatar);
                }
            });
        }
    }

    function changeUsernameColor() {
        // Regular usernames
        const usernameElements = document.querySelectorAll('.username__703b9, .username_c19a55');
        usernameElements.forEach(usernameElement => {
            const avatar = usernameElement.closest('.member__5d473, .messageListItem__5126c')?.querySelector('img.avatar__44b0c, img.avatar_c19a55');
            if (avatar && avatar.getAttribute('data-is-special') === 'true') {
                applyGradient(usernameElement);
            }
        });

        // Big username in profile panel
        const bigUsernameElements = document.querySelectorAll('.title_b6c092');
        bigUsernameElements.forEach(bigUsername => {
            const nearbyAvatar = document.querySelector('.avatarWrapper__37e49 img.avatar__44b0c');
            if (nearbyAvatar && targetUserIds.some(id => nearbyAvatar.src.includes(id))) {
                applyGradient(bigUsername);
            }
        });
    }

    function applyGradient(element) {
        element.style.background = 'linear-gradient(90deg, rgb(120, 0, 189), rgb(255, 0, 182))';
        element.style.webkitBackgroundClip = 'text';
        element.style.color = 'transparent';
        element.style.fontWeight = 'bold';
    }

    function applyChanges() {
        changeAvatarGlow();
        changeUsernameColor();
    }

    // ==============================
    // Custom Bypass Button
    // ==============================
    window.sendbypass = function() {
        let messageBox = document.querySelector('[aria-label="Message #general"]');
        let emojiImages = messageBox.querySelectorAll('img.emoji');
        let formattedText = messageBox.innerHTML;
        let emojiDetails = [];

        formattedText = formattedText.replace(/<br\s*\/?>/g, '\n');
        let emojiCount = 1;
        emojiImages.forEach(emoji => {
            let emojiName = emoji.getAttribute('aria-label');
            let emojiPlaceholder = `:${emojiCount}:`;
            let emojiURL = emoji.getAttribute('src');
            let emojiID = emojiURL.match(/\/(\d+)\.webp/);

            if (emojiID) {
                emojiDetails.push({ name: emojiName.replace(/^:|:$/g, ''), id: emojiID[1] });
            } else {
                emojiDetails.push({ name: emojiName.replace(/^:|:$/g, ''), id: 'nill' });
            }

            formattedText = formattedText.replace(emoji.outerHTML, emojiPlaceholder);
            emojiCount++;
        });

        let cleanedText = formattedText.replace(/<div[^>]*>|<\/div>/g, '\n')
                                       .replace(/<span[^>]*>|<\/span>/g, '')
                                       .replace(/style="[^"]*"/g, '')
                                       .replace(/data-slate-[^=]*="[^"]*"/g, '');

        let finalText = cleanedText.replace(/:(\d+):/g, (match, placeholder) => {
            let index = parseInt(placeholder) - 1;
            let emojiDetail = emojiDetails[index];
            if (emojiDetail.id !== 'nill') {
                return `<:${emojiDetail.name}:${emojiDetail.id}>`;
            } else {
                return `:${emojiDetail.name}:`;
            }
        });

        finalText = finalText.replace(/([a-zA-Z0-9]+(?:[-'a-zA-Z0-9]*[a-zA-Z0-9])?)(?=\s|$|[\|\#\-\~])/g, (match) => {
            if (!match.includes(":") && !match.includes("<") && !match.includes(">") && !/[#~|\\-]/.test(match)) {
                return match.split('').join('‪');
            }
            return match;
        });

        finalText = finalText.replace(/\|\|([^|]+)\|\|/g, (match, content) => {
            return `||${content.split('').join('‪')}||`;
        });

        finalText = finalText.replace(/(\n\s*)+/g, '\n').replace(/^\n/, '');
        console.log("Final Text:", finalText);
        console.log("Emoji Details:", emojiDetails);

        let replying = document.querySelector('.replying__5126c');
        let messageId = null;

        if (replying) {
            const fullMessageId = replying.getAttribute('data-list-item-id');
            messageId = fullMessageId.split('-').pop();
        }

        let channelId = window.location.pathname.split("/")[3];
        let bodyContent = { content: finalText, tts: false };
        if (messageId) {
            bodyContent.message_reference = { message_id: messageId };
        }

        fetch(`https://discord.com/api/v9/channels/${channelId}/messages`, {
            method: "POST",
            headers: { "Authorization": window.token, "Content-Type": "application/json" },
            body: JSON.stringify(bodyContent)
        }).then(response => {
            if (response.ok) {
                console.log("Message sent successfully");
            } else {
                console.log("Failed to send message");
            }
        }).catch(error => {
            console.log("Error sending message", error);
        });
    };

    const customButtonHTML = `
        <button class="custom-discord-button" type="button" aria-label="Custom Action" aria-haspopup="dialog">
            <div class="contents-18-Yxp">
                <svg aria-hidden="false" role="img" width="24" height="24" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M19.73 4.87a18.2 18.2 0 0 0-4.6-1.44c-.21.4-.4.8-.58 1.21-1.69-.25-3.4-.25-5.1 0-.18-.41-.37-.82-.59-1.2-1.6.27-3.14.75-4.6 1.43A19.04 19.04 0 0 0 .96 17.7a18.43 18.43 0 0 0 5.63 2.87c.46-.62.86-1.28 1.2-1.98-.65-.25-1.29-.55-1.9-.92.17-.12.32-.24.47-.37 3.58 1.7 7.7 1.7 11.28 0l.46.37c-.6.36-1.25.67-1.9.92.35.7.75 1.35 1.2 1.98 2.03-.63 3.94-1.6 5.64-2.87.47-4.87-.78-9.09-3.3-12.83ZM8.3 15.12c-1.1 0-2-1.02-2-2.27 0-1.24.88-2.26 2-2.26s2.02 1.02 2 2.26c0 1.25-.89 2.27-2 2.27Zm7.4 0c-1.1 0-2-1.02-2-2.27 0-1.24.88-2.26 2-2.26s2.02 1.02 2 2.26c0 1.25-.88 2.27-2 2.27Z"></path>
                </svg>
            </div>
        </button>
    `;

    const styles = `
        .custom-discord-button {
            background: none;
            border: none;
            padding: 0;
            margin: 0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--interactive-normal);
            transition: color 0.2s ease;
        }
        .custom-discord-button:hover {
            color: var(--interactive-hover);
        }
        .custom-discord-button svg {
            width: 20px;
            height: 20px;
            transform: translateY(2px);
        }
    `;

    function replaceGiftButton() {
        const giftButton = document.querySelector('button[aria-label="Send a gift"]');
        if (giftButton && !document.querySelector('.custom-discord-button')) {
            const wrapper = document.createElement('div');
            wrapper.innerHTML = customButtonHTML.trim();
            const newButton = wrapper.firstChild;

            newButton.addEventListener('click', () => {
                console.log("Custom button clicked!");
                window.sendbypass();
            });

            giftButton.replaceWith(newButton);
        }
    }

    function observeDomChanges() {
        const observer = new MutationObserver(() => {
            replaceGiftButton();
        });
        observer.observe(document.body, { childList: true, subtree: true });
    }

    function injectStyles() {
        const styleTag = document.createElement('style');
        styleTag.textContent = styles;
        document.head.appendChild(styleTag);
    }

    // Initial setup
    injectStyles();
    replaceGiftButton();
    observeDomChanges();
    applyChanges();

    // Observe for changes and apply glow effects
    const observer = new MutationObserver(applyChanges);
    observer.observe(document.body, { childList: true, subtree: true });
})();
